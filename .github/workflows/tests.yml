name: Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v3

      - name: Lint
        run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-ut-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.8']
        os: [ubuntu-latest, macos-latest, windows-latest]
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pip
        run: python -m pip install --upgrade --disable-pip-version-check "pip>=21.1"

      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
            ./.tox
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.py', '**/requirements.txt') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: make setup-ci

      - name: Run tests
        run: tox -e cov
        env:
          PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        run: |
          python -m pip install --upgrade --disable-pip-version-check coveralls tomli
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
